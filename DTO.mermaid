graph TD
    style CategoryRoutes fill:#672d2d
    style A fill:#FF6B6B
    style B fill:#FF6B6B
    style C fill:#FF6B6B
    style D fill:#FF6B6B
    style E fill:#FF6B6B
    style F fill:#FF6B6B
    style G fill:#FF6B6B
    style H fill:#FF6B6B
    style I fill:#FF6B6B
    style J fill:#FF6B6B
    style K fill:#FF6B6B
    style L fill:#FF6B6B
    style M1 fill:#FF6B6B
    style N1 fill:#FF6B6B

    subgraph CategoryRoutes
        subgraph POST /categories
            A[InputCategory :
            - name : string
            - parent_category_id?: number] -->|createCategory| B[SCategory :
            - id : number 
            - name : string
            - parent_category_id?: number]
        end
        subgraph POST /categories/:id/categories
            M1[InputCategory :
            - name : string] -->|createChildCategory| N1[SCategory :
            - id : number 
            - name : string
            - parent_category_id: number]
        end
        subgraph GET /categories
            C[None] -->|getAllCategories| D[SCategoryArray :
            - id : number 
            - name : string
            - parent_category_id?: number]
        end
        subgraph GET /categories/:id
            E[id: string] -->|getCategoryById| F[SCategory :
            - id : number 
            - name : string
            - parent_category_id?: number]
        end
        subgraph PUT /categories/:id
            G[id: string, 
            PartialCategory :
            - name?: string
            - parent_category_id?: number] -->|updateCategory| H[SCategory :
            - id : number 
            - name : string
            - parent_category_id?: number]
        end
        subgraph DELETE /categories/:id
            I[id: string] -->|deleteCategory| J[None]
        end
        subgraph GET /categories/:id/categories
            K[id: string] -->|getChildCategories| L[SCategoryArray :
            - id : number 
            - name : string
            - parent_category_id: number]
        end
    end

    style EventRoutes fill:#5c4188
    style M fill:#845EC2
    style N fill:#845EC2
    style O fill:#845EC2
    style P fill:#845EC2
    style Q fill:#845EC2
    style R fill:#845EC2
    style S fill:#845EC2
    style T fill:#845EC2
    style U fill:#845EC2
    style V fill:#845EC2
    style W fill:#845EC2
    style X fill:#FF7F3F

    subgraph EventRoutes
        subgraph POST /event
            M[InputEvent :
            - title: string
            - image: string
            - desc: string
            - date: date] -->|createEvent| N[SEvent :
            - id: number
            - title: string
            - image: string
            - desc: string
            - date: date]
        end
        subgraph GET /event
            O[None] -->|getAllEvents| P[SEvent :
            - id: number
            - title: string
            - image: string
            - desc: string
            - date: date]
        end
        subgraph GET /event/:id
            Q[id: string] -->|getEventById| R[SEvent :
            - id: number
            - title: string
            - image: string
            - desc: string
            - date: date]
        end
        subgraph PUT /event/:id
            S[id: string, 
            PartialEvent :
            - id: number
            - title: string
            - image: string
            - desc: string
            - date: date] -->|updateEvent| T[SEvent :
            - id: number
            - title: string
            - image: string
            - desc: string
            - date: date]
        end
        subgraph DELETE /event/:id
            U[id: string] -->|deleteEvent| V[None]
        end
        subgraph GET /event/:id/registration
            W[id: string] -->|getEventRegistrations| X[SRegistration :
            - id: number
            - date: date
            - seats: number]
        end
    end
    
    style ItemsRoutes fill:#1d685f
    style Y fill:#2A9D8F
    style Z fill:#2A9D8F
    style AA fill:#2A9D8F
    style AB fill:#2A9D8F
    style AC fill:#2A9D8F
    style AD fill:#2A9D8F
    style AE fill:#2A9D8F
    style AF fill:#2A9D8F
    style AG fill:#2A9D8F
    style AH fill:#2A9D8F
    style AI fill:#2A9D8F
    style AJ fill:#2A9D8F
    style AK fill:#2A9D8F
    style AL fill:#2A9D8F
    style AM fill:#2A9D8F
    style AN fill:#FF6B6B
    style AO fill:#2A9D8F
    style AP fill:#2A9D8F

    subgraph ItemsRoutes
        subgraph POST /items
            Y[InputItem :
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date] -->|createItem| Z[SItem :
            - id: number
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date]
        end
        subgraph GET /items
            AA[None] -->|getAllItems| AB[SItem :
            - id: number
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date]
        end
        subgraph GET /items/:id
            AC[id: string] -->|getItemById| AD[SItem :
            - id: number
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date]
        end
        subgraph GET /items/:status
            AE[status: string] -->|getItemsByStatus| AF[SItem :
            - id: number
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date]
        end
        subgraph PUT /items/:id
            AG[id: string, 
            PartialItem :
            - id: number
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date] -->|updateItem| AH[SItem :
            - id: number
            - name: string
            - status: ItemStatus
            - material: string
            - image: string
            - date: Date]
        end
        subgraph DELETE /items/:id
            AI[id: string] -->|deleteItem| AJ[None]
        end
        subgraph POST /items/:id/categories
            AK[itemId: string, categoryId: string] -->|addItemCategory| AL[None]
        end
        subgraph GET /items/:id/categories
            AM[id: string] -->|getItemCategories| AN[number]
        end
        subgraph DELETE /items/:id/categories/:id
            AO[itemId: string, categoryId: string] -->|removeItemCategory| AP[None]
        end
    end

    style PaymentRoutes fill:#43567e
    style AQ fill:#5c77b0
    style AR fill:#5c77b0
    style AS fill:#5c77b0
    style AT fill:#5c77b0
    style AU fill:#5c77b0
    style AV fill:#5c77b0
    style AW fill:#5c77b0
    style AX fill:#5c77b0
    style AY fill:#5c77b0
    style AZ fill:#5c77b0

    subgraph PaymentRoutes
        subgraph POST /subscription
            AQ[SubscriptionBody :
            - customerId: string
            - priceId: string
            - userId: number] -->|createSubscription| AR[SPayment :
            - id : number
            - id_stripe_payment : string
            - amount : float
            - type : number
            - date : date
            - status : string]
        end
        subgraph DELETE /subscription/:id
            AS[subscriptionId: string] -->|cancelSubscription| AT[None]
        end
        subgraph POST /donation
            AU[DonationBody :
            - amount: number,
            - paymentMethodId: string,
            - userId: number,
            ] -->|createDonation| AV[SPayment :
            - id : number
            - id_stripe_payment : string
            - amount : float
            - type : number
            - date : date
            - status : string]
        end
        subgraph POST /payment-method
            AW[PaymentMethodBody :
            - customerId: string
            - paymentMethodId: string] -->|attachPaymentMethod| AX[None]
        end
        subgraph POST /webhook
            AY[rawBody: string] -->|handleWebhook| AZ[None]
        end
    end

    style RegistrationRoutes fill:#a1552f
    style BA fill:#FF7F3F
    style BB fill:#FF7F3F
    style BC fill:#FF7F3F
    style BD fill:#FF7F3F
    style BE fill:#FF7F3F
    style BF fill:#FF7F3F
    style BG fill:#FF7F3F
    style BH fill:#FF7F3F
    style BI fill:#FF7F3F
    style BJ fill:#FF7F3F

    subgraph RegistrationRoutes
        subgraph POST /registration
            BA[InputRegistration :
            - date : date
            - seats : number] -->|createRegistration| BB[SRegistration :
            - id : number
            - date : date
            - seats : number]
        end
        subgraph GET /registration
            BC[None] -->|getAllRegistrations| BD[SRegistration :
            - id : number
            - date : date
            - seats : number]
        end
        subgraph GET /registration/:id
            BE[id: string] -->|getRegistrationById| BF[SRegistration :
            - id : number
            - date : date
            - seats : number]
        end
        subgraph PUT /registration/:id
            BG[id: string, 
            PartialRegistration :
            - id : number
            - date : date
            - seats : number] -->|updateRegistration| BH[SRegistration :
            - id : number
            - date : date
            - seats : number]
        end
        subgraph DELETE /registration/:id
            BI[id: string] -->|deleteRegistration| BJ[None]
        end
    end

    style UserRoutes fill:#9f799f
    style BK fill:#ae00ae
    style BL fill:#ae00ae
    style BM fill:#ae00ae
    style BN fill:#ae00ae
    style BO fill:#ae00ae
    style BP fill:#ae00ae
    style BQ fill:#ae00ae
    style BR fill:#ae00ae
    style BS fill:#ae00ae
    style BT fill:#ae00ae
    style BU fill:#ae00ae
    style BV fill:#ae00ae
    style BW fill:#ae00ae
    style BX fill:#ae00ae
    subgraph UserRoutes
        subgraph POST /users
            BK[CreateUser :
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string] -->|createUser| BL[SUser :
            - id: number
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string]
        end
        subgraph GET /users
            BM[None] -->|getAllUsers| BN[SUser :
            - id: number
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string]
        end
        subgraph GET /users/:id
            BO[id: string] -->|getUserById| BP[SUser :
            - id: number
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string]
        end
        subgraph PUT /users/:id
            BQ[id: string, UpdateUser] -->|updateUser| BR[SUser :
            - id: number
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string]
        end
        subgraph DELETE /users/:id
            BS[id: string] -->|deleteUser| BT[None]
        end
        subgraph POST /users/:id/roles
            BU[id: string, roles: number] -->|addUserRoles| BV[SUser :
            - id: number
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string]
        end
        subgraph DELETE /users/:id/roles
            BW[id: string, roles: number] -->|removeUserRoles| BX[SUser :
            - id: number
            - first_name: string
            - last_name: string
            - email: string
            - phone: string
            - password: string
            - is_adherent: boolean
            - sub_type: string]
        end
    end

    style AuthRoutes fill:#4a6741
    style BY fill:#6B8E23
    style BZ fill:#6B8E23
    style CA fill:#6B8E23
    style CB fill:#6B8E23
    style CE fill:#6B8E23
    style CF fill:#6B8E23
    style CG fill:#6B8E23
    style CH fill:#6B8E23
    style CI fill:#6B8E23
    style CJ fill:#6B8E23
    style CK fill:#6B8E23
    style CL fill:#6B8E23
    
    subgraph AuthRoutes
        subgraph POST /auth/login
            BY[Login:
            - email: string
            - password: string] -->|login| BZ[None]
        end
        subgraph POST /auth/register
            CA[Register:
            - email: string
            - password: string
            - first_name: string
            - last_name: string
            - phone?: string] -->|register| CB[None]
        end
        subgraph POST /auth/verify_otp
            CE[VerifyOTPDto:
            - id: string
            - otp: string] -->|verifyOTP| CF[JWT]
        end
        subgraph GET /auth/me
            CG[None] -->|getCurrentUser| CH[SUser]
        end
        subgraph POST /auth/revoke-all
            CI[None] -->|revokeAllTokens| CJ[None]
        end
        subgraph POST /auth/revoke-user/:id
            CK[id: string] -->|revokeUserTokens| CL[None]
        end
    end